name: Main Branch
on: [push]
jobs:

  release_debian_image_prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      CONTAINER_REPO: "wlieberz/release-notifier-rust"
      BASE_IMG: "debian-bookworm-slim"
      DOCKERFILE: "Dockerfile.debian-slim"
    steps:
      - uses: actions/checkout@v3

      - name: Get App Version
        run: echo "APP_VER=$(cat VERSION.txt)" >> $GITHUB_ENV

      - name: Show App Version
        run: echo "${{ env.APP_VER }}"

      - name: Docker Build and Tag
        run: docker build --file ${DOCKERFILE} --tag ${CONTAINER_REPO}:${{ env.APP_VER }}-${BASE_IMG} ./

      - name: DockerHub Login
        env:
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: echo $DOCKERHUB_TOKEN | docker login --username wlieberz --password-stdin

      - name: Docker Push
        run: docker push ${CONTAINER_REPO}:${{ env.APP_VER }}-${BASE_IMG} 

      - name: DockerHub Logout
        run: docker logout

  release_alpine_image_prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      CONTAINER_REPO: "wlieberz/release-notifier-rust"
      BASE_IMG: "alpine-3.18.3"
      DOCKERFILE: "Dockerfile.alpine"
    steps:
      - uses: actions/checkout@v3

      - name: Get App Version
        run: echo "APP_VER=$(cat VERSION.txt)" >> $GITHUB_ENV

      - name: Show App Version
        run: echo "${{ env.APP_VER }}"

      - name: Docker Build and Tag
        run: docker build --file ${DOCKERFILE} --tag ${CONTAINER_REPO}:${{ env.APP_VER }}-${BASE_IMG} ./

      - name: DockerHub Login
        env:
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: echo $DOCKERHUB_TOKEN | docker login --username wlieberz --password-stdin

      - name: Docker Push
        run: docker push ${CONTAINER_REPO}:${{ env.APP_VER }}-${BASE_IMG} 

      - name: DockerHub Logout
        run: docker logout